server {
  listen 80;
  
  # Buffer size for handling Cloudflare
  client_header_buffer_size 1k;
  large_client_header_buffers 4 16k;
  
  # Timeouts for Cloudflare
  client_body_timeout 60s;
  client_header_timeout 60s;
  keepalive_timeout 65s;
  send_timeout 60s;
  
  # Enable gzip compression with optimized settings
  gzip on;
  gzip_vary on;
  gzip_min_length 256;
  gzip_comp_level 6;
  gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json image/svg+xml application/x-font-ttf font/opentype application/vnd.ms-fontobject;
  gzip_disable "msie6";
  
  # Add security headers
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
  
  # Add CORS headers for Supabase
  add_header Access-Control-Allow-Origin "https://suqjifkhmekcdflwowiw.supabase.co" always;
  add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
  add_header Access-Control-Allow-Headers "Authorization, Content-Type, x-client-info, apikey" always;
  add_header Access-Control-Allow-Credentials "true" always;
  
  # SEO Redirects - Remove duplicate pages
  location = /llms.txt {
    return 301 /;
  }
  
  location = /landing-page.html {
    return 301 /;
  }
  
  # Proxy for Supabase RPC calls to avoid CORS
  location /api/trends {
    proxy_pass https://suqjifkhmekcdflwowiw.supabase.co/rest/v1/rpc/get_youtube_trends;
    proxy_set_header apikey "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN1cWppZmtobWVrY2RmbHdvd2l3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjY1MDkzNDQsImV4cCI6MjA0MjA4NTM0NH0.ajtUy21ib_z5O6jWaAYwZ78_D5Om_cWra5zFq-0X-3I";
    proxy_set_header Authorization "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN1cWppZmtobWVrY2RmbHdvd2l3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjY1MDkzNDQsImV4cCI6MjA0MjA4NTM0NH0.ajtUy21ib_z5O6jWaAYwZ78_D5Om_cWra5zFq-0X-3I";
    proxy_set_header Content-Type "application/json";
    proxy_hide_header Access-Control-Allow-Origin;
    add_header Access-Control-Allow-Origin "*" always;
    add_header Cache-Control "public, max-age=300";
  }
  
  # Service Worker - must not be cached
  location = /service-worker.js {
    root /usr/share/nginx/html;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
    expires 0;
  }
  
  # Serve static files from /static/ directory with proper caching
  location ^~ /static/ {
    root /usr/share/nginx/html;
    try_files $uri =404;  # Return 404 if file doesn't exist
    expires 1y;
    add_header Cache-Control "public, immutable, max-age=31536000";
    
    # Enable gzip for these files too
    gzip_static on;
  }
  
  # Serve other static assets with proper caching
  location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|otf)$ {
    root /usr/share/nginx/html;
    try_files $uri =404;  # Return 404 if file doesn't exist
    expires 1y;
    add_header Cache-Control "public, immutable, max-age=31536000";
    
    # Enable gzip for these files too
    gzip_static on;
  }
  
  # Serve landing page at root for SEO, but not for OAuth callbacks
  location = / {
    root /usr/share/nginx/html;
    
    # If there are OAuth parameters, serve the React app (index.html)
    # Otherwise serve the landing page
    if ($args ~* "(code=|state=)") {
      rewrite ^.*$ /index.html last;
    }
    
    try_files /landing-page.html /index.html;
    add_header Cache-Control "no-store, no-cache, must-revalidate";
  }
  
  # Handle all other routes with React router
  location / {
    root /usr/share/nginx/html;
    try_files $uri $uri/ /index.html;
    
    # Don't cache the index.html
    add_header Cache-Control "no-store, no-cache, must-revalidate";
  }
  
  # Explicitly handle auth callbacks to ensure they work properly
  location /auth/callback {
    root /usr/share/nginx/html;
    try_files $uri /index.html;
    add_header Cache-Control "no-store, no-cache, must-revalidate";
  }
}